{
  "_args": [
    [
      {
        "raw": "messageformat-parser@^1.0.0",
        "scope": null,
        "escapedName": "messageformat-parser",
        "name": "messageformat-parser",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/ma/CODE/Madek/webapp/node_modules/messageformat"
    ]
  ],
  "_from": "messageformat-parser@>=1.0.0 <2.0.0",
  "_id": "messageformat-parser@1.0.0",
  "_inCache": true,
  "_location": "/messageformat-parser",
  "_nodeVersion": "6.4.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/messageformat-parser-1.0.0.tgz_1472770365921_0.41532221157103777"
  },
  "_npmUser": {
    "name": "eemeli",
    "email": "eemeli@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "messageformat-parser@^1.0.0",
    "scope": null,
    "escapedName": "messageformat-parser",
    "name": "messageformat-parser",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/messageformat"
  ],
  "_resolved": "https://registry.npmjs.org/messageformat-parser/-/messageformat-parser-1.0.0.tgz",
  "_shasum": "3dea21419f141c50026a29d4b2239203ad613d3f",
  "_shrinkwrap": null,
  "_spec": "messageformat-parser@^1.0.0",
  "_where": "/Users/ma/CODE/Madek/webapp/node_modules/messageformat",
  "bugs": {
    "url": "https://github.com/messageformat/parser/issues"
  },
  "contributors": [
    {
      "name": "Alex Sexton",
      "email": "alexsexton@gmail.com"
    },
    {
      "name": "Eemeli Aro",
      "email": "eemeli@gmail.com"
    },
    {
      "name": "Adrian Vogelsgesang",
      "email": "adrian.vogelsgesang@tum.de"
    }
  ],
  "dependencies": {},
  "description": "A PEG.js parser for ICU MessageFormat strings -- part of messageformat.js",
  "devDependencies": {
    "expect.js": "^0.3.1",
    "mocha": "^3.0.2",
    "pegjs": "^0.10.0"
  },
  "directories": {},
  "dist": {
    "shasum": "3dea21419f141c50026a29d4b2239203ad613d3f",
    "tarball": "https://registry.npmjs.org/messageformat-parser/-/messageformat-parser-1.0.0.tgz"
  },
  "files": [
    "parser.pegjs",
    "parser.js"
  ],
  "gitHead": "99d179eb4216395ff730ba8cc9a8a8bf3385b343",
  "homepage": "https://messageformat.github.io/",
  "keywords": [
    "icu",
    "messageformat",
    "parser"
  ],
  "license": "MIT",
  "main": "parser.js",
  "maintainers": [
    {
      "name": "eemeli",
      "email": "eemeli@gmail.com"
    },
    {
      "name": "slexaxton",
      "email": "alexsexton@gmail.com"
    }
  ],
  "name": "messageformat-parser",
  "optionalDependencies": {},
  "readme": "# messageformat-parser  <a href=\"http://travis-ci.org/messageformat/parser\"><img align=\"right\" alt=\"Build Status\" src=\"https://secure.travis-ci.org/messageformat/parser.png\"></a>\n\nA [PEG.js] parser for [ICU MessageFormat] strings – part of [messageformat.js].\nOutputs an AST defined by [parser.pegjs].\n\nThe generated parser function takes two parameters, first the string to be\nparsed, and a second optional parameter `options`, an object containing arrays\nof keywords for `cardinal` and `ordinal` rules for the current locale – these\nare used to validate plural and selectordinal keys. If `options` or its fields\nare missing or set to false, the full set of valid [Unicode CLDR] keys is used:\n`'zero', 'one', 'two', 'few', 'many', 'other'`. To disable this check, pass in\nan empty array.\n\n[ICU MessageFormat]: https://messageformat.github.io/guide/\n[messageformat.js]: https://messageformat.github.io/\n[parser.pegjs]: ./parser.pegjs\n[PEG.js]: http://pegjs.org/\n[Unicode CLDR]: http://cldr.unicode.org/index/cldr-spec/plural-rules\n\n\n#### Installation\n\n```sh\nnpm install messageformat-parser\n```\n\n\n#### Usage\n\n```js\n> var parse = require('messageformat-parser').parse;\n\n> parse('So {wow}.')\n[ 'So ', { type: 'argument', arg: 'wow' }, '.' ]\n\n> parse('Such { thing }. { count, selectordinal, one {First} two {Second}' +\n        '                  few {Third} other {#th} } word.')\n[ 'Such ',\n  { type: 'argument', arg: 'thing' },\n  '. ',\n  { type: 'selectordinal',\n    arg: 'count',\n    offset: 0,\n    cases:\n     [ { key: 'one', tokens: [ 'First' ] },\n       { key: 'two', tokens: [ 'Second' ] },\n       { key: 'few', tokens: [ 'Third' ] },\n       { key: 'other', tokens: [ { type: 'octothorpe' }, 'th' ] } ] },\n  ' word.' ]\n\n> parse('Many{type,select,plural{ numbers}selectordinal{ counting}' +\n                         'select{ choices}other{ some {type}}}.')\n[ 'Many',\n  { type: 'select',\n    arg: 'type',\n    cases:\n     [ { key: 'plural', tokens: [ ' numbers' ] },\n       { key: 'selectordinal', tokens: [ ' counting' ] },\n       { key: 'select', tokens: [ ' choices' ] },\n       { key: 'other', tokens: [ ' some',\n                                 { type: 'argument', arg: 'type' } ] } ] },\n  '.' ]\n\n> parse('{Such compliance')\n// SyntaxError: Expected \",\", \"}\" or [ \\t\\n\\r] but \"c\" found.\n\n> var msg = '{words, plural, zero{No words} one{One word} other{# words}}';\n> var englishKeys = { cardinal: [ 'one', 'other' ],\n                      ordinal: [ 'one', 'two', 'few', 'other' ] };\n> parse(msg)\n[ { type: 'plural',\n    arg: 'words',\n    offset: 0,\n    cases:\n     [ { key: 'zero', tokens: [ 'No words' ] },\n       { key: 'one', tokens: [ 'One word' ] },\n       { key: 'other', tokens: [ { type: 'octothorpe' }, ' words' ] } ] } ]\n\n> parse(msg, englishKeys)\n// Error: Invalid key `zero` for argument `words`. Valid plural keys for this\n//        locale are `one`, `other`, and explicit keys like `=0`.\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/messageformat/parser.git"
  },
  "scripts": {
    "prepublish": "pegjs parser.pegjs",
    "test": "mocha"
  },
  "version": "1.0.0"
}
